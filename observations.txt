I am not a recent engineer but I was one in the past so I had some useful tools at my disposal to solve these problems. These skills came in more when it came to solivng issues.

However, I was definitely quicker at working with a set of technologies I've not worked with before. 

Therefore I think this tooling allows less experienced developers the chance to become more powerful, but they still need a foundation to solve problems.

I haven't used tools like GitHub, node or others before

ChatGPT did make some mistakes too

ChatGPT was also selective sometimes over what it gave me - such as sometimes it would give me everything I wanted, other times it would decide to just give me an example

I was learning somewhat but not necesarrily as much as I would if I had to do everything myself - which meant I was ultimately more dependent on the tool

It also seemed a bit forgetful - it would change the list of tools, or change the case study

you have to be very specific and best to add in one change at a time

not very procedural - after each change I didnt really think about what had gone before

fine for a greenfield project like this - how would it work in a complex existing project I'm not sure

it recreates the file each time, meaning that it doesnt always persist changes. This also means that random changes can come in. This is possibly because of how I am using the tool.

I learned to then ask for snippet changes rather than wholesale ones

fix one thing, break another